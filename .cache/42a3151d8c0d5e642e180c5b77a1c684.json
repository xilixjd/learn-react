{"id":"a+Ks","dependencies":[{"name":"/Users/didi/Desktop/xjd/learn/learn-react/package.json","includedInParent":true,"mtime":1548210301845},{"name":"/Users/didi/Desktop/xjd/learn/learn-react/.babelrc","includedInParent":true,"mtime":1548845476397},{"name":"./ReactFiber","loc":{"line":1,"column":36},"parent":"/Users/didi/Desktop/xjd/learn/learn-react/src/reconciler/ReactFiberRoot.js","resolved":"/Users/didi/Desktop/xjd/learn/learn-react/src/reconciler/ReactFiber.js"},{"name":"./ReactFiberExpirationTime","loc":{"line":2,"column":23},"parent":"/Users/didi/Desktop/xjd/learn/learn-react/src/reconciler/ReactFiberRoot.js","resolved":"/Users/didi/Desktop/xjd/learn/learn-react/src/reconciler/ReactFiberExpirationTime.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFiberRoot = createFiberRoot;\n\nvar _ReactFiber = require('./ReactFiber');\n\nvar _ReactFiberExpirationTime = require('./ReactFiberExpirationTime');\n\nfunction createFiberRoot(containerInfo) {\n  var uninitializedFiber = (0, _ReactFiber.createHostRootFiber)();\n  var root = {\n    // The currently active root fiber. This is the mutable root of the tree.\n    current: uninitializedFiber,\n    // Any additional information from the host associated with this root.\n    containerInfo: containerInfo,\n    // A finished work-in-progress HostRoot that's ready to be committed.\n    finishedWork: null,\n    expirationTime: _ReactFiberExpirationTime.NoWork\n  };\n  uninitializedFiber.stateNode = root;\n  return root;\n}","map":{"mappings":[{"name":"createFiberRoot","generated":{"line":6,"column":8},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":16}},{"name":"createFiberRoot","generated":{"line":6,"column":26},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":16}},{"generated":{"line":8,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":7}},{"name":"createFiberRoot","generated":{"line":12,"column":9},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":16}},{"generated":{"line":12,"column":24},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":7}},{"name":"containerInfo","generated":{"line":12,"column":25},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":33}},{"generated":{"line":12,"column":38},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":7}},{"generated":{"line":12,"column":40},"source":"reconciler/ReactFiberRoot.js","original":{"line":4,"column":48}},{"generated":{"line":13,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":5,"column":2}},{"name":"uninitializedFiber","generated":{"line":13,"column":6},"source":"reconciler/ReactFiberRoot.js","original":{"line":5,"column":6}},{"generated":{"line":13,"column":27},"source":"reconciler/ReactFiberRoot.js","original":{"line":5,"column":27}},{"generated":{"line":13,"column":65},"source":"reconciler/ReactFiberRoot.js","original":{"line":5,"column":2}},{"generated":{"line":14,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":2}},{"name":"root","generated":{"line":14,"column":6},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":6}},{"generated":{"line":14,"column":13},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":13}},{"generated":{"line":15,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":7,"column":4}},{"name":"current","generated":{"line":16,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":8,"column":4}},{"name":"uninitializedFiber","generated":{"line":16,"column":13},"source":"reconciler/ReactFiberRoot.js","original":{"line":8,"column":13}},{"generated":{"line":16,"column":31},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":13}},{"generated":{"line":17,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":9,"column":4}},{"name":"containerInfo","generated":{"line":18,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":10,"column":4}},{"name":"containerInfo","generated":{"line":18,"column":19},"source":"reconciler/ReactFiberRoot.js","original":{"line":10,"column":19}},{"generated":{"line":18,"column":32},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":13}},{"generated":{"line":19,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":11,"column":4}},{"name":"finishedWork","generated":{"line":20,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":12,"column":4}},{"generated":{"line":20,"column":18},"source":"reconciler/ReactFiberRoot.js","original":{"line":12,"column":18}},{"generated":{"line":20,"column":22},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":13}},{"name":"expirationTime","generated":{"line":21,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":13,"column":4}},{"name":"NoWork","generated":{"line":21,"column":20},"source":"reconciler/ReactFiberRoot.js","original":{"line":13,"column":20}},{"generated":{"line":22,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":13}},{"generated":{"line":22,"column":3},"source":"reconciler/ReactFiberRoot.js","original":{"line":6,"column":2}},{"name":"uninitializedFiber","generated":{"line":23,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":15,"column":2}},{"name":"stateNode","generated":{"line":23,"column":21},"source":"reconciler/ReactFiberRoot.js","original":{"line":15,"column":21}},{"generated":{"line":23,"column":30},"source":"reconciler/ReactFiberRoot.js","original":{"line":15,"column":2}},{"name":"root","generated":{"line":23,"column":33},"source":"reconciler/ReactFiberRoot.js","original":{"line":15,"column":33}},{"generated":{"line":23,"column":37},"source":"reconciler/ReactFiberRoot.js","original":{"line":15,"column":2}},{"generated":{"line":24,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":16,"column":2}},{"name":"root","generated":{"line":24,"column":9},"source":"reconciler/ReactFiberRoot.js","original":{"line":16,"column":9}},{"generated":{"line":24,"column":13},"source":"reconciler/ReactFiberRoot.js","original":{"line":16,"column":2}},{"generated":{"line":25,"column":0},"source":"reconciler/ReactFiberRoot.js","original":{"line":17,"column":1}}],"sources":{"reconciler/ReactFiberRoot.js":"import { createHostRootFiber } from './ReactFiber'\nimport { NoWork } from './ReactFiberExpirationTime'\n\nexport function createFiberRoot (containerInfo) {\n  let uninitializedFiber = createHostRootFiber()\n  let root = {\n    // The currently active root fiber. This is the mutable root of the tree.\n    current: uninitializedFiber,\n    // Any additional information from the host associated with this root.\n    containerInfo: containerInfo,\n    // A finished work-in-progress HostRoot that's ready to be committed.\n    finishedWork: null,\n    expirationTime: NoWork\n  }\n  uninitializedFiber.stateNode = root\n  return root\n}"},"lineCount":null}},"hash":"9af144bc1f71c68ee576aed667d2bbe1","cacheData":{"env":{}}}